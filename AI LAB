{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyO4n6x0E+9tWididJeI+mJs",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Ayesha3910/Artificial-Intelligence/blob/main/AI%20LAB\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QtOemStzN3Uj",
        "outputId": "f657b005-965a-447a-824a-387c17a684e5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter a number6\n",
            "the given number is an even number\n"
          ]
        }
      ],
      "source": [
        "# Activity 1 :\n",
        "#let us take an integer from user as input and check whether th egiven value is even or not.?\n",
        "n=input(\"enter a number\")\n",
        "if int (n)%2==0:\n",
        "   print(\"the given number is an even number\")\n",
        "else:\n",
        "   print(\"the given number is an odd number\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Activity 2:\n",
        "#write a python code to keep accepting integers values from uer....?\n",
        "sum=0\n",
        "s=input(\"enter a integers values....\")\n",
        "n=int(s)\n",
        "while n!=0:\n",
        "  sum=sum+n\n",
        "  s=input(\"enter an integers value.....\")\n",
        "  n=int(s)\n",
        "print(\"sum of given values is\",sum)  "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4pwU2QlZOiKt",
        "outputId": "eab6a39c-861d-472b-dcce-006325eed0e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter a integers values....10\n",
            "enter an integers value.....512\n",
            "enter an integers value.....9\n",
            "enter an integers value.....45\n",
            "enter an integers value.....0\n",
            "sum of given values is 576\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Activity 3\n",
        "# Check whether the number is prime or not\n",
        "isprime=True\n",
        "i=2\n",
        "number=int(input(\"enter a new number\"))\n",
        "while(i<number):\n",
        "  remainder=number%i\n",
        "  if(remainder==0):\n",
        "    isprime=False\n",
        "  else:\n",
        "      i=i+1\n",
        "  if(isprime):\n",
        "     print(\"number is prime\")\n",
        "  else:\n",
        "     print(\"Number is not prime\")"
      ],
      "metadata": {
        "id": "SVGuyrdn0e8I"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Activity 4\n",
        "# Accept 5 integer values from user and display their sum.\n",
        "sumofNumbers = 0\n",
        "counter = 0\n",
        "while counter!=5:\n",
        "  number = int(input(\"Enter number: \"))\n",
        "  sumofNumbers+=number\n",
        "  counter+=1\n",
        "print(f\"Sum of Numbers is: {sumofNumbers}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Nbb7TnaNuZO7",
        "outputId": "b584e2be-9b21-4c4c-b3f0-668be2f27348"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter number: 34\n",
            "Enter number: 66\n",
            "Enter number: 12\n",
            "Enter number: 7\n",
            "Enter number: 2\n",
            "Sum of Numbers is: 121\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Activity 5\n",
        "# Calculate the sum of all the values between 0-10 using while loop.\n",
        "\n",
        "sumOfNumbers = 0\n",
        "counter = 1\n",
        "while counter <= 10:\n",
        "  sumOfNumbers += counter\n",
        "  counter += 1\n",
        "print(f\"Sum of 0-10 is: {sumOfNumbers}\")"
      ],
      "metadata": {
        "id": "JH4fNt-goOgx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "aae03d47-ad2b-4788-f316-4dfc4810bfca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sum of 0-10 is: 55\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Lab Task 1\n",
        "# Write a program that prompts the user to input an integer and \n",
        "# then outputs the number with the digits reversed. \n",
        "# For example, if the input is 12345, the output should be 54321.\n",
        "Number = int(input(\"Please Enter any Number: \"))    \n",
        "Reverse = 0    \n",
        "while(Number > 0):    \n",
        "    Reminder = Number %10    \n",
        "    Reverse = (Reverse *10) + Reminder    \n",
        "    Number = Number //10    \n",
        "     \n",
        "print(\"\\n Reverse of entered number is = %d\" %Reverse)"
      ],
      "metadata": {
        "id": "V105-sNroTzN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "32475453-c13e-4c81-b7be-2c6560c3d3fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Please Enter any Number: 567\n",
            "\n",
            " Reverse of entered number is = 765\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Lab Task 2\n",
        "# Write a program that reads a set of integers, and then \n",
        "# prints the sum of the even and odd integers.\n",
        "\n",
        "sumOfEvenNumbers = 0\n",
        "sumOfOddNumbers = 0\n",
        "\n",
        "counter = 0\n",
        "while counter < 10:\n",
        "  number = int(input('Enter a number : '))\n",
        "  if number % 2 == 0:\n",
        "    sumOfEvenNumbers += number\n",
        "  else:\n",
        "    sumOfOddNumbers += number\n",
        "  counter += 1\n",
        "print(f\"Sum of Even Numbers is: {sumOfEvenNumbers}\")\n",
        "print(f\"Sum of Odd Numbers is: {sumOfOddNumbers}\")"
      ],
      "metadata": {
        "id": "_-PDG_XJwb9P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Lab Task 3\n",
        "# Fabonacci Series\n",
        "nteams = int(input(\"How many teams? \"))\n",
        "\n",
        "# first two teams\n",
        "n1, n2 = 0, 1\n",
        "count = 0\n",
        "\n",
        "# check if the number of teams is valid\n",
        "if nteams <= 0:\n",
        "   print(\"Please enter a positive integer\")\n",
        "# if there is only one team, return n1\n",
        "elif nteams == 1:\n",
        "   print(\"Fibonacci sequence upto\",nteams,\":\")\n",
        "   print(n1)\n",
        "# generate fibonacci sequence\n",
        "else:\n",
        "   print(\"Fibonacci sequence:\")\n",
        "   while count < nteams:\n",
        "       print(n1)\n",
        "       nth = n1 + n2\n",
        "       # update values\n",
        "       n1 = n2\n",
        "       n2 = nth\n",
        "       count += 1"
      ],
      "metadata": {
        "id": "9F75J4fzsUMf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a030ba73-44e4-43c3-c1d6-4ab8fed461a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "How many teams? 2\n",
            "Fibonacci sequence:\n",
            "0\n",
            "1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Lab task 4\n",
        "# Factorial of a number\n",
        "\n",
        "number = int(input(\"Enter a number: \"))\n",
        "factorial = 1\n",
        "\n",
        "for i in range(1, number+1):\n",
        "  factorial *= i\n",
        "print(f'Factorial of {number} is {factorial}')"
      ],
      "metadata": {
        "id": "iRQYy_ZBsd_H",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d8f7f3eb-3660-4f68-b181-14d077a0e46f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter a number: 45\n",
            "Factorial of 45 is 119622220865480194561963161495657715064383733760000000000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# lab task 5\n",
        "# Grading System\n",
        "a=int(input(\"enter marks of students\"))\n",
        "avg=a/100\n",
        "if(avg<50):\n",
        "  print(\"your grade is F\")\n",
        "elif (avg>=50 and avg<=60):\n",
        "  print(\"your grade is E\")\n",
        "elif(avg>=61 and avg<=70):\n",
        "  print(\"Your grade is D\")\n",
        "elif(avg>=71 and avg<=80):\n",
        "  print (\"your grade is C\")\n",
        "elif(avg>=81 and avg<=90):\n",
        "  print(\"your grade is B\")\n",
        "else:\n",
        "  print(\"your grade is A\")"
      ],
      "metadata": {
        "id": "Z3oBrNLMsh5X",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e948fc6-9acd-456e-b455-c94e3afca98a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter marks of students75\n",
            "your grade is F\n"
          ]
        }
      ]
    }
  ]
}